<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
">
    <!--controller组件扫描-->
    <context:component-scan base-package="com.kawainekosann">
        <!--不包括-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
        <!--包括-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置内部资源视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--/jsp/syccess.jsp-->
        <!--前缀-->
        <property name="prefix" value="/jsp/"></property>
        <!--后缀-->
        <property name="suffix" value=".jsp"></property>
    </bean>
    <!--配置处理器映射器，json工具将对象转成json-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
            </list>
        </property>
    </bean>-->
    <!--mvc的注解驱动-->
    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>

    <!--mvc开发资源的访问，/** 匹配目录及其子目录，这里是js目录不会被web.xml里配置的DispatcherServlet匹配到对应的映射中-->
    <!--<mvc:resources mapping="/js/**" location="/js/"></mvc:resources>-->
    <!--这里指mvc映射不到的地址交由原始容器（这里是tomcat）去寻找静态资源-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <!--声明转换器-->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.kawainekosann.converter.DateConverter"></bean>
            </list>
        </property>
    </bean>

    <!--配置文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="maxUploadSize" value="500000"></property>
    </bean>

    <!--配置拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--对哪些资源执行拦截操作-->
            <mvc:mapping path="/target"/>
            <bean class="com.kawainekosann.interseptor.MyIntersepetor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <!--对哪些资源执行拦截操作-->
            <mvc:mapping path="/target"/>
            <bean class="com.kawainekosann.interseptor.MyIntersepetor2"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--配置异常处理器-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        &lt;!&ndash;内部资源视图解析器已经配置 前缀 后缀&ndash;&gt;
        <property name="defaultErrorView" value="error1"></property>
        &lt;!&ndash;先匹配下面的异常，匹配不到使用上面的默认的配置&ndash;&gt;
        <property name="exceptionMappings">
            <map>
                <entry key="java.lang.ArithmeticException" value="error2"></entry>
            </map>
        </property>
    </bean>-->

    <!--自定义异常处理器-->
    <bean class="com.kawainekosann.resolver.MyResolver"/>
</beans>